df <- df %>%
rename(period1875 = yr1,
period1880 = yr2,
period1885 = yr3,
period1890 = yr4,
period1895 = yr5,
period1900 = yr6,
treat1875 = b_industry_w_pc1875,
treat1880 = b_industry_w_pc1880,
treat1885 = b_industry_w_pc1885,
treat1890 = b_industry_w_pc1890,
treat1895 = b_industry_w_pc1895,
treat1900 = b_industry_w_pc1900,
deaths_pc = dth_pc,
county = code1867,
bluecollar_1882 = b_industry_w_pc,
deaths_male = dthm_pc,
deaths_female = dthf_pc,
deaths_infants_tot = dth1_pb,
deaths_infants_leg = dthleg_pb,
deaths_infants_illeg = dthbas_pb,
bluecollar_1882_self = b_industry_self_pc,
public_1882 = e_public_w_pc)
#create panal data set
df_spec2 <- pdata.frame(df, index = c("county", "year"))
#delete unneeded data frame
rm("df")
#create new year variable which is 0 whenever year = 1880 as this is the
#omitted reference period
df_spec2$year_normalized <-
ifelse(df_spec2$year == 1880,
0,
df_spec2$year)
#create list with specs of regressions
formulas <- list("deaths_pc ~ bluecollar_1882 * factor(year_normalized)",
"deaths_pc ~ bluecollar_1882*factor(year_normalized) + urb_pc + waterwork_pc + sewage_pc",
"deaths_male ~ bluecollar_1882*factor(year_normalized) + urb_pc + waterwork_pc + sewage_pc",
"deaths_female ~ bluecollar_1882*factor(year_normalized) + urb_pc + waterwork_pc + sewage_pc",
"deaths_infants_tot ~ bluecollar_1882*factor(year_normalized) + urb_pc + waterwork_pc + sewage_pc",
"deaths_infants_leg ~ bluecollar_1882*factor(year_normalized) + urb_pc + waterwork_pc + sewage_pc",
"deaths_infants_illeg ~ bluecollar_1882*factor(year_normalized) + urb_pc + waterwork_pc + sewage_pc",
"deaths_pc ~ bluecollar_1882_self * factor(year_normalized) + urb_pc + waterwork_pc + sewage_pc",
"deaths_pc ~ public_1882 * factor(year_normalized) + urb_pc + waterwork_pc + sewage_pc")
#list of names for models
model_names <- c("Baseline",
"Controls",
"Males",
"Females",
"Infants",
"Legitimate Infants",
"Illegitimate Infants",
"Self-Employed",
"Public Servants")
#create empty list to store models
models <- list()
#loop through all 9 specs
for (i in 1:9){
#run regression
models[[i]] <- plm(formula = formulas[[i]],
data = df_spec2,
model = "within")
#calculate clustered SE
models[[i]]$vcov = vcovHC(models[[i]],
type = "sss",
cluster = "group")
}
names(models) <- model_names
#create new rows which need to be added to regression table
rows <- tribble(~term, ~`[[1]]`, ~`[[2]]`, ~`[[3]]`, ~`[[4]]`, ~`[[5]]`, ~`[[6]]`, ~`[[7]]`, ~`[[8]]`, ~`[[9]]`,
'Controls', 'No', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes',
'County FE', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes',
'Time FE', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes',
'Counties', '441', '441', '441', '441', '441', '441', '441', '441', '441',
'Periods', '6', '6', '6', '6', '6', '6', '6', '6', '6')
attr(rows, 'position') <- c(11, 12, 13, 15, 16)
# create regression table
table_fe_results <-
modelsummary(models,
#name all three different sets of coefficients the same such
#that the table consists of only five rows of coefficients
coef_map =
c('bluecollar_1882:factor(year_normalized)1' = 'Treat × 1875',
'bluecollar_1882:factor(year_normalized)3' = 'Treat × 1885',
'bluecollar_1882:factor(year_normalized)4' = 'Treat × 1890',
'bluecollar_1882:factor(year_normalized)5' = 'Treat × 1895',
'bluecollar_1882:factor(year_normalized)6' = 'Treat × 1900',
'bluecollar_1882_self:factor(year_normalized)1' = 'Treat × 1875',
'bluecollar_1882_self:factor(year_normalized)3' = 'Treat × 1885',
'bluecollar_1882_self:factor(year_normalized)4' = 'Treat × 1890',
'bluecollar_1882_self:factor(year_normalized)5' = 'Treat × 1895',
'bluecollar_1882_self:factor(year_normalized)6' = 'Treat × 1900',
'public_1882:factor(year_normalized)1' = 'Treat × 1875',
'public_1882:factor(year_normalized)3' = 'Treat × 1885',
'public_1882:factor(year_normalized)4' = 'Treat × 1890',
'public_1882:factor(year_normalized)5' = 'Treat × 1895',
'public_1882:factor(year_normalized)6' = 'Treat × 1900'),
#add number of observations and r^2 statistics
gof_map = c("nobs", "r.squared"),
#add the previously defined additional rows
add_rows = rows,
#have the regression table being put out in the gt format s.t.
#more adjustments can be made to it
output = "gt")
table_fe_results <- table_fe_results %>%
#assign column labels and span them over multiple columns
tab_spanner(label = 'Heterogeneity Tests', columns = 4:8) %>%
tab_spanner(label = 'Placebo Tests', columns = 9:10)
gtsave(table_fe_results, file = "table_fe_results.docx")
#remove unused objects
rm(list = c("rows",
"formulas",
"i",
"models",
"model_names"))
#load data
#pick path for spec3 data
df <- haven::read_dta('BDH-Bismarck-JEEA-spec3.dta')
#clean data up, rename columns more intuitively
df <- df %>%
rename(district_id = code,
deaths_pc = dth_pc,
insured_1885 = hi_initial,
bluecollar_1882 = b_industry_w_pc,
share_age_1_9 = sh_birthage1_9,
share_age_10_19 = sh_birthage10_19,
share_age_20_29 = sh_birthage20_29,
share_age_30_39 = sh_birthage30_39,
share_age_40_49 = sh_birthage40_49,
share_age_50_59 = sh_birthage50_59,
share_age_60_69 = sh_birthage60_69,
share_age_70_plus = sh_birthage70_plus,
share_spd = sh_spd)
#create panel data set
df_spec3 <- pdata.frame(df, index = c("district_id", "year"))
#remove unneeded data set
rm("df")
#controls: urb_pc waterwork_pc sewage_pc
#baseline period: 1880
#treatment variables: treat1875 treat1885 treat1890 treat1895 treat1900
#can't set baseline year as in stata --> need to set all 1880 periods to 0
df_spec3$year_normalized <-
ifelse(df_spec3$year == 1880,
0,
df_spec3$year)
#create list with specs of regressions
formulas <- list("deaths_pc ~ factor(year_normalized) * bluecollar_1882 + urb_pc + waterwork_pc + sewage_pc",
"deaths_pc ~ factor(year_normalized) * bluecollar_1882 + urb_pc + waterwork_pc + sewage_pc + avg_age",
"deaths_pc ~ factor(year_normalized) * bluecollar_1882 + urb_pc + waterwork_pc + sewage_pc + share_age_1_9 + share_age_10_19 + share_age_20_29 + share_age_30_39 + share_age_40_49 + share_age_50_59 + share_age_60_69",
"deaths_pc ~ factor(year_normalized) * bluecollar_1882 + urb_pc + waterwork_pc + sewage_pc + share_spd",
"deaths_pc ~ factor(year_normalized) * insured_1885 + urb_pc + waterwork_pc + sewage_pc",
"deaths_pc ~ factor(year_normalized) * insured_1885 + urb_pc + waterwork_pc + sewage_pc + avg_age",
"deaths_pc ~ factor(year_normalized) * insured_1885 + urb_pc + waterwork_pc + sewage_pc + share_age_1_9 + share_age_10_19 + share_age_20_29 + share_age_30_39 + share_age_40_49 + share_age_50_59 + share_age_60_69",
"deaths_pc ~ factor(year_normalized) * insured_1885 + urb_pc + waterwork_pc + sewage_pc + share_spd")
#list of names for models
model_names <- c("Controls",
"Average age",
"Age groups",
"SPD vote",
"Controls",
"Average age",
"Age groups",
"SPD vote")
#create list to store models in
models <- list()
for (i in 1:8){
#run regression
models[[i]] <- plm(formula = formulas[[i]],
data = df_spec3,
model = "within")
#calculate SE
models[[i]]$vcov <- vcovHC(models[[i]],
type = "sss",
cluster = "group")
}
#assign names to models
names(models) = model_names
#create new rows which need to be added to regression table
rows <- tribble(~term, ~`[[1]]`, ~`[[2]]`, ~`[[3]]`, ~`[[4]]`, ~`[[5]]`, ~`[[6]]`, ~`[[7]]`, ~`[[8]]`,
'Average age', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'No', 'No',
'Age groups', 'No', 'No', 'Yes', 'No', 'No', 'No', 'Yes', 'No',
'SPD vote', 'No', 'No', 'No', 'Yes', 'No', 'No', 'No', 'Yes',
'Districts', '36', '36', '36', '36', '36', '36', '36', '36',
'Periods', '6', '6', '6', '6', '6', '6', '6', '6')
attr(rows, 'position') <- c(11, 12, 13, 15, 16)
table_fe_robust <-
modelsummary(models,
#name all three different sets of coefficients the same such
#that the table consists of only five rows of coefficients
coef_map = c('factor(year_normalized)1:bluecollar_1882' = 'Treat × 1875',
'factor(year_normalized)3:bluecollar_1882' = 'Treat × 1885',
'factor(year_normalized)4:bluecollar_1882' = 'Treat × 1890',
'factor(year_normalized)5:bluecollar_1882' = 'Treat × 1895',
'factor(year_normalized)6:bluecollar_1882' = 'Treat × 1900',
'factor(year_normalized)1:insured_1885' = 'Treat × 1875',
'factor(year_normalized)3:insured_1885' = 'Treat × 1885',
'factor(year_normalized)4:insured_1885' = 'Treat × 1890',
'factor(year_normalized)5:insured_1885' = 'Treat × 1895',
'factor(year_normalized)6:insured_1885' = 'Treat × 1900'),
#add number of observations and r^2 statistics
gof_map = c("nobs", "r.squared"),
#add the previously defined additional rows
add_rows = rows,
#add some notes
notes = "Included in (1)-(8): Standard controls, district FE, time FE",
#have the regression table being put out in the gt format s.t.
#more adjustments can be made to it
output = "gt")
table_fe_robust <- table_fe_robust %>%
#assign column labels and span them over multiple columns
tab_spanner(label = 'Initial blue collar workers (1882)', columns = 2:5) %>%
tab_spanner(label = 'Initial insured (1885)', columns = 6:9)
gtsave(table_fe_robust, file = "table_fe_robust.docx")
rm(list = c("formulas",
"models",
"rows",
"i",
"model_names"))
#continue to use spec3 data with normalized year
#create list with specs for regressions
formulas <- list("cod_accident_pc ~ factor(year_normalized) * bluecollar_1882 + urb_pc + waterwork_pc + sewage_pc",
"cod_water_pc ~ factor(year_normalized) *  bluecollar_1882 + urb_pc + waterwork_pc + sewage_pc",
"cod_air_pc ~ factor(year_normalized) * bluecollar_1882  + urb_pc + waterwork_pc + sewage_pc",
"cod_lung_pc ~ factor(year_normalized) * bluecollar_1882  + urb_pc + waterwork_pc + sewage_pc",
"cod_tuber_pc ~ factor(year_normalized) * bluecollar_1882  + urb_pc + waterwork_pc + sewage_pc",
"cod_noninfec_pc ~ factor(year_normalized) * bluecollar_1882  + urb_pc + waterwork_pc + sewage_pc",
"cod_matern_pc ~ factor(year_normalized) * bluecollar_1882  + urb_pc + waterwork_pc + sewage_pc",
"cod_other_unkn_dis_pc ~ factor(year_normalized) * bluecollar_1882  + urb_pc + waterwork_pc + sewage_pc")
#list of names for models
model_names <- c("Accident",
"Waterborne",
"Airborne",
"Lung",
"TB+Scrofula",
"Noninfectious",
"Maternal",
"Unknown")
#create list to store models in
models <- list()
for (i in 1:8){
#run regression
models[[i]] <- plm(formula = formulas[[i]],
data = df_spec3,
model = "within")
#calculate SE
models[[i]]$vcov <- vcovHC(models[[i]],
type = "sss",
cluster = "group")
}
#assign names to models
names(models) = model_names
#create new rows which need to be added to regression table
rows <- tribble(~term, ~`[[1]]`, ~`[[2]]`, ~`[[3]]`, ~`[[4]]`, ~`[[5]]`, ~`[[6]]`, ~`[[7]]`, ~`[[8]]`,
'Districts', '36', '36', '36', '36', '36', '36', '36', '36',
'Periods', '6', '6', '6', '6', '6', '6', '6', '6')
attr(rows, 'position') <- c(12, 13, 1)
table_channels_cod <-
modelsummary(models,
#name all eight different sets of coefficients the same such
#that the table consists of only five rows of coefficients
coef_map = c('factor(year_normalized)1:bluecollar_1882' = 'Treat × 1875',
'factor(year_normalized)3:bluecollar_1882' = 'Treat × 1885',
'factor(year_normalized)4:bluecollar_1882' = 'Treat × 1890',
'factor(year_normalized)5:bluecollar_1882' = 'Treat × 1895',
'factor(year_normalized)6:bluecollar_1882' = 'Treat × 1900'),
#add number of observations and r^2 statistics
gof_map = c("nobs", "r.squared"),
#add the previously defined additional rows
add_rows = rows,
#add some notes
notes = "Included in (1)-(8): Standard controls, district FE, time FE",
#have the regression table being put out in the gt format s.t.
#more adjustments can be made to it
output = "gt")
table_channels_cod <- table_channels_cod %>%
#assign column labels and span them over multiple columns
tab_spanner(label = 'Infectious diseases', columns = 3:6)
gtsave(table_channels_cod, file = "table_channels_cod.docx")
#delete unneeded objects
rm(list = c("formulas",
"models",
"rows",
"i",
"model_names"))
#two regressions are run with the spec2 data, two with spec3
#create list with specs for regressions
formulas <- list("deaths_pc ~ factor(year_normalized) * bluecollar_1882 * doc_pc + urb_pc + waterwork_pc + sewage_pc",
"deaths_pc ~ factor(year_normalized) * bluecollar_1882 * doc1882_pc + urb_pc + waterwork_pc + sewage_pc",
"deaths_pc ~ factor(year_normalized) *  bluecollar_1882 * ln_distuni + urb_pc + waterwork_pc + sewage_pc",
"deaths_pc ~ factor(year_normalized) * bluecollar_1882 * uni + urb_pc + waterwork_pc + sewage_pc")
#list of names for models
model_names <- list("Medical professionals 1882",
"Approbated doctors 1882",
"Distance to university",
"University dummy")
#list with respective dataframes
dataframes <- list(df_spec2,
df_spec3,
df_spec2,
df_spec3)
#create list to store models in
models <- list()
for (i in 1:4){
#run regression
models[[i]] <- plm(formula = formulas[[i]],
data = dataframes[[i]],
model = "within")
#calculate SE
models[[i]]$vcov <- vcovHC(models[[i]],
type = "sss",
cluster = "group")
}
#assign names to models
names(models) = model_names
#create new rows which need to be added to regression table
rows <- tribble(
~term, ~`[[1]]`, ~`[[2]]`, ~`[[3]]`, ~`[[4]]`,
'Counties/districts', '441', '36', '441', '36',
'Periods', '6', '6', '6', '6'
)
attr(rows, 'position') <- c(22, 23)
table_channels_supply <-
modelsummary(models,
#name all eight different sets of coefficients the same such
#that the table consists of only five rows of coefficients
coef_map = c('factor(year_normalized)1:bluecollar_1882' = 'Treat × 1875',
'factor(year_normalized)3:bluecollar_1882' = 'Treat × 1885',
'factor(year_normalized)4:bluecollar_1882' = 'Treat × 1890',
'factor(year_normalized)5:bluecollar_1882' = 'Treat × 1895',
'factor(year_normalized)6:bluecollar_1882' = 'Treat × 1900',
'factor(year_normalized)1:bluecollar_1882:doc_pc' = 'Treat × Health supply × 1875',
'factor(year_normalized)3:bluecollar_1882:doc_pc' = 'Treat × Health supply × 1885',
'factor(year_normalized)4:bluecollar_1882:doc_pc' = 'Treat × Health supply × 1890',
'factor(year_normalized)5:bluecollar_1882:doc_pc' = 'Treat × Health supply × 1895',
'factor(year_normalized)6:bluecollar_1882:doc_pc' = 'Treat × Health supply × 1900',
'factor(year_normalized)1:bluecollar_1882:ln_distuni' = 'Treat × Health supply × 1875',
'factor(year_normalized)3:bluecollar_1882:ln_distuni' = 'Treat × Health supply × 1885',
'factor(year_normalized)4:bluecollar_1882:ln_distuni' = 'Treat × Health supply × 1890',
'factor(year_normalized)5:bluecollar_1882:ln_distuni' = 'Treat × Health supply × 1895',
'factor(year_normalized)6:bluecollar_1882:ln_distuni' = 'Treat × Health supply × 1900',
'factor(year_normalized)1:bluecollar_1882:doc1882_pc' = 'Treat × Health supply × 1875',
'factor(year_normalized)3:bluecollar_1882:doc1882_pc' = 'Treat × Health supply × 1885',
'factor(year_normalized)4:bluecollar_1882:doc1882_pc' = 'Treat × Health supply × 1890',
'factor(year_normalized)5:bluecollar_1882:doc1882_pc' = 'Treat × Health supply × 1895',
'factor(year_normalized)6:bluecollar_1882:doc1882_pc' = 'Treat × Health supply × 1900',
'factor(year_normalized)1:bluecollar_1882:uni' = 'Treat × Health supply × 1875',
'factor(year_normalized)3:bluecollar_1882:uni' = 'Treat × Health supply × 1885',
'factor(year_normalized)4:bluecollar_1882:uni' = 'Treat × Health supply × 1890',
'factor(year_normalized)5:bluecollar_1882:uni' = 'Treat × Health supply × 1895',
'factor(year_normalized)6:bluecollar_1882:uni' = 'Treat × Health supply × 1900'),
#add number of observations and r^2 statistics
gof_map = c("nobs", "r.squared"),
#add the previously defined additional rows
add_rows = rows,
#add some notes
notes = "Included in (1)-(4): Standard controls, county/district FE, time FE",
#have the regression table being put out in the gt format s.t.
#more adjustments can be made to it
output = "gt")
table_channels_supply <- table_channels_supply %>%
#assign column labels and span them over multiple columns
tab_spanner(label = 'Supply of health services', columns = 2:3) %>%
tab_spanner(label = 'Supply of health knowledge', columns = 4:5)
gtsave(table_channels_supply, file= "table_channels_supply.docx")
rm(list = c("dataframes",
"formulas",
"model_names",
"models",
"rows",
"i"))
#load data
#pick path for spec4 data
df <- haven::read_dta('BDH-Bismarck-JEEA-spec4.dta')
#render the df a panel data frame
df_spec4 <- pdata.frame(df,
index = c("code",
"year"))
##### Panel A #####
#define the lagged variables
df_spec4$i_urb_pc_lag <- lag(df_spec4$i_urb_pc, n = 1)
df_spec4$waterwork_pc_lag <- lag(df_spec4$waterwork_pc, n = 1)
df_spec4$sewage_pc_lag <- lag(df_spec4$sewage_pc, n = 1)
df_spec4$ins_all_exp_doc_pi_std_lag <- lag(df_spec4$ins_all_exp_doc_pi_std, n = 1)
df_spec4$ins_all_exp_med_pi_std_lag <- lag(df_spec4$ins_all_exp_med_pi_std, n = 1)
df_spec4$ins_all_exp_hos_pi_std_lag <- lag(df_spec4$ins_all_exp_hos_pi_std, n = 1)
df_spec4$ins_all_exp_pay_pi_std_lag <- lag(df_spec4$ins_all_exp_pay_pi_std, n = 1)
df_spec4$ins_all_exp_mat_pi_std_lag <- lag(df_spec4$ins_all_exp_mat_pi_std, n = 1)
df_spec4$ins_all_exp_dth_pi_std_lag <- lag(df_spec4$ins_all_exp_dth_pi_std, n = 1)
df_spec4$ins_all_exp_adm_pi_std_lag <- lag(df_spec4$ins_all_exp_adm_pi_std, n = 1)
df_spec4$sick_days_pi_std_lag <- lag(df_spec4$sick_days_pi_std, n = 1)
#set up list with all the regression specifications
formulas <-
list("dth_pc_std ~ ins_all_exp_doc_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"dth_pc_std ~ ins_all_exp_med_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"dth_pc_std ~ ins_all_exp_hos_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
#"dth_pc_std ~ ins_all_exp_mpay_pi_std + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag", #not included
"dth_pc_std ~ ins_all_exp_pay_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"dth_pc_std ~ ins_all_exp_mat_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"dth_pc_std ~ ins_all_exp_dth_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"dth_pc_std ~ ins_all_exp_adm_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
#"dth_pc_std ~ ins_all_exp_care_pi_std + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag", #not included
#"dth_pc_std ~ ins_all_exp_comp_pi_std + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag", #not included
"dth_pc_std ~ sick_days_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag")
#create list to store models in
models <- list()
#define names for models
model_names <- c("Doctor visits",
"Medication",
"Hospitalization",
"Sick pay",
"Maternity benefits",
"Death benefits",
"Administration expenditures",
"Days of sick leave")
#loop through the eight regression specs
for (i in 1:8){
#run regression
models[[i]] <- plm(formula = formulas[[i]],
data = df_spec4,
model = "within",
effect = "twoways")
#calculate SE
models[[i]]$vcov <- vcovHC(models[[i]],
type = "sss",
cluster = "group")
}
names(models) = model_names
table_expenditures_A <-
modelsummary(models,
#naming all coefficients identically such that they all show
#up in the same row
coef_map = c('ins_all_exp_doc_pi_std_lag' = 'Lagged Expenditure (Std.)',
'ins_all_exp_med_pi_std_lag' = 'Lagged Expenditure (Std.)',
'ins_all_exp_hos_pi_std_lag' = 'Lagged Expenditure (Std.)',
'ins_all_exp_pay_pi_std_lag' = 'Lagged Expenditure (Std.)',
'ins_all_exp_mat_pi_std_lag' = 'Lagged Expenditure (Std.)',
'ins_all_exp_dth_pi_std_lag' = 'Lagged Expenditure (Std.)',
'ins_all_exp_adm_pi_std_lag' = 'Lagged Expenditure (Std.)',
'sick_days_pi_std_lag' = 'Lagged Expenditure (Std.)'),
#add number of observations and r^2 statistics
gof_map = c("nobs", "r.squared"),
notes = "Included in (1)-(8): Standard controls, district FE, time FE",
#have the regression table being put out in the gt format s.t.
#more adjustments can be made to it
output = "gt")
table_expenditures_A <- table_expenditures_A %>%
#assign column labels and span them over multiple columns
tab_spanner(label = 'Health care expenditures', columns = 2:4) %>%
tab_spanner(label = 'Compensation expenditures', columns = 5:7)
gtsave(table_expenditures_A, file= "table_expenditures_A.docx")
##### Panel B #####
#define the other lagged variables
df_spec4$ins_all_exp_care_pi_std_lag <- lag(df_spec4$ins_all_exp_care_pi_std, n = 1)
df_spec4$ins_all_exp_comp_pi_std_lag <- lag(df_spec4$ins_all_exp_comp_pi_std, n = 1)
df_spec4$ins_all_exp_adm_pi_std_lag <- lag(df_spec4$ins_all_exp_adm_pi_std, n = 1)
#set up list with all the regression specifications
formulas <-
list("cod_tot_pc_std ~ ins_all_exp_care_pi_std_lag + ins_all_exp_comp_pi_std_lag + ins_all_exp_adm_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"cod_accident_pc_std ~ ins_all_exp_care_pi_std_lag + ins_all_exp_comp_pi_std_lag + ins_all_exp_adm_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"cod_water_pc_std ~ ins_all_exp_care_pi_std_lag + ins_all_exp_comp_pi_std_lag + ins_all_exp_adm_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"cod_air_pc_std ~ ins_all_exp_care_pi_std_lag + ins_all_exp_comp_pi_std_lag + ins_all_exp_adm_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"cod_lung_pc_std ~ ins_all_exp_care_pi_std_lag + ins_all_exp_comp_pi_std_lag + ins_all_exp_adm_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"cod_tuber_pc_std ~ ins_all_exp_care_pi_std_lag + ins_all_exp_comp_pi_std_lag + ins_all_exp_adm_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"cod_noninfec_pc_std ~ ins_all_exp_care_pi_std_lag + ins_all_exp_comp_pi_std_lag + ins_all_exp_adm_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag",
"cod_matern_pc_std ~ ins_all_exp_care_pi_std_lag + ins_all_exp_comp_pi_std_lag + ins_all_exp_adm_pi_std_lag + i_urb_pc_lag + waterwork_pc_lag + sewage_pc_lag")
#create list to store models in
models <- list()
#define names for models
model_names <- c("All",
"Accident",
"Waterborne",
"Airborne",
"Lung",
"TB + Scrufola",
"Noninfectious",
"Maternal")
#loop through the eight regression specs
for (i in 1:8){
#run regression
models[[i]] <- plm(formula = formulas[[i]],
data = df_spec4,
model = "within",
effect = "twoways")
#calculate SE
models[[i]]$vcov <- vcovHC(models[[i]],
type = "sss",
cluster = "group")
}
names(models) = model_names
table_expenditures_B <-
modelsummary(models,
#naming all coefficients identically such that they all show
#up in the same row
coef_map = c('ins_all_exp_care_pi_std_lag' = 'Lagged Health Care Exp. (Std.)',
'ins_all_exp_comp_pi_std_lag' = 'Lagged Compensation Exp. (Std.)',
'ins_all_exp_adm_pi_std_lag' = 'Lagged Administration Exp. (Std.)'),
#add number of observations and r^2 statistics
gof_map = c("nobs", "r.squared"),
notes = "Included in (1)-(8): Standard controls, district FE, time FE",
#have the regression table being put out in the gt format s.t.
#more adjustments can be made to it
output = "gt")
table_expenditures_B <- table_expenditures_B %>%
#assign column labels and span them over multiple columns
tab_spanner(label = 'Infectious diseases', columns = 3:6)
gtsave(table_expenditures_B, file= "table_expenditures_B.docx")
#remove unneeded objects
rm(list = c("df",
"formulas",
"models",
"i",
"model_names"))
save.image("~/Documents/GitHub/Bismarck-replicationproject/BismarckReplication_SchickleSchulz.RData")
